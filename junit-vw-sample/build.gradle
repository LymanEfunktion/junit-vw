import javassist.bytecode.AnnotationsAttribute
import javassist.bytecode.ClassFile
import javassist.bytecode.ConstPool
import javassist.bytecode.MethodInfo
import javassist.bytecode.annotation.Annotation
import javassist.bytecode.annotation.ClassMemberValue


apply plugin: 'java'
apply plugin: 'eclipse'

dependencies {
	testCompile 'de.quality:junit-vw:3.0'
	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-core:1.3'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
}

repositories {
	mavenLocal()
	jcenter()
}


buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath 'de.quality:junit-vw:3.0'
		classpath 'javassist:javassist:3.12.1.GA'
		classpath 'net.bytebuddy:byte-buddy:1.4.16'
		classpath 'net.bytebuddy:byte-buddy-agent:1.4.16'
	}
}

test { jvmArgs "-javaagent:C:/users/xce3518/.m2/repository/de/quality/junit-vw/3.0/junit-vw-3.0.jar" }

task changeTest {

	doLast {
		FileTree tree = fileTree('build/classes/test').include('**/**.class')
		tree.each { file ->
			ClassFile clazz = new ClassFile(new DataInputStream(new FileInputStream(file)))
			println clazz.getName()
			ConstPool cp = clazz.getConstPool()
			AnnotationsAttribute attr = null
			List<AnnotationsAttribute> attributes = clazz.getAttributes()
			for (int i=0;i<attributes.size();i++) {
				if (AnnotationsAttribute.visibleTag.equals(attributes.get(i).getName())) {
					attr = attributes.get(i)
					if (attr.getAnnotations()) {
						for (Annotation an : attr.getAnnotations()) {
							if (an.getTypeName().equals("org.junit.runner.RunWith")) {
								println "runWith " + an.getMemberValue("value")
							}
						}
					}
				} else {
					attr = new AnnotationsAttribute(cp, AnnotationsAttribute.visibleTag)
				}
			}
			List<MethodInfo> methods = clazz.getMethods()
			methods.each {
				List<AnnotationsAttribute> mAttr = it.getAttributes()
				for (int i=0;i<mAttr.size();i++) {
					if (AnnotationsAttribute.visibleTag.equals(mAttr.get(i).getName())) {
						if (mAttr.get(i).getAnnotations()) {
							for (Annotation an : mAttr.get(i).getAnnotations()) {
								if (an.getTypeName().equals("org.junit.Test")) {
									Annotation a = new Annotation("org.junit.runner.RunWith", cp);
									a.addMemberValue("value", new ClassMemberValue("de.quality.vw.JUnitVWRunner", cp));
									attr.addAnnotation(a);
									clazz.addAttribute(attr);
									clazz.write(new DataOutputStream(new FileOutputStream(file)))
									break
								}
							}
						}
					}
				}
			}
			println "-----"
		}
	}
}

changeTest.dependsOn testClasses
test.dependsOn changeTest
